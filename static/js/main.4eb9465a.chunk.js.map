{"version":3,"sources":["UI/Card.js","NewExpense/ExpenseForm.js","NewExpense/NewExpense.js","ExpenseFilter/ExpenseFilter.js","Expenses/ExpenseDate.js","Expenses/ExpenseItem.js","Expenses/ExpensesList.js","Chart/ChartBar.js","Chart/Chart.js","Expenses/ExpensesChart.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseForm","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","openForm","setOpenForm","toggleFormHandler","formContent","type","onClick","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onEnteredExpenseData","value","onChange","target","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpensesFilter","selected","onFilterChange","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","expensesContent","filteredExpenses","length","map","item","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximun","ExpensesChart","chartDataPoints","expenses","expense","getMonth","DUMMY_EXPENSES","App","setExpenses","getUTCFullYear","filteredYear","setFilteredYear","filter","prevExpenses","filterdYear","ReactDOM","render","document","getElementById"],"mappings":"0YAUeA,EAPF,SAACC,GACV,IAAMC,EAAU,QAAUD,EAAME,UAChC,OACI,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,Y,OCmEzBC,G,YAtEK,SAACJ,GAEjB,MAAwCK,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEA,EAAgCN,oBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KA4BMC,EAAoB,WACtBD,GAAaD,IAGbG,EAAc,qBAAKb,UAAU,8BAAf,SACd,wBAAQc,KAAK,SAASC,QAASH,EAA/B,+BA0BJ,OAvBIF,IACAG,EAAc,uBAAMG,SA1BE,SAACC,GACvBA,EAAMC,iBACN,IAAMC,EAAc,CAChBC,MAAOhB,EACPiB,QAASf,EACTgB,KAAM,IAAIC,KAAKf,IAGnBV,EAAM0B,qBAAqBL,GAE3Bd,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,IAEfG,KAYc,UACV,sBAAKZ,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,0CACA,uBAAOc,KAAK,OAAOW,MAAOrB,EAAcsB,SAvC7B,SAACT,GACxBZ,EAAgBY,EAAMU,OAAOF,aAwCrB,sBAAKzB,UAAU,uBAAf,UACI,2CACA,uBAAOc,KAAK,SAASW,MAAOnB,EAAesB,IAAI,OAAOC,KAAK,OAAOH,SAxCtD,SAACT,GACzBV,EAAiBU,EAAMU,OAAOF,aAyCtB,sBAAKzB,UAAU,uBAAf,UACI,yCACA,uBAAOc,KAAK,OAAOW,MAAOjB,EAAaoB,IAAI,aAAaE,IAAI,aAAaJ,SAzC/D,SAACT,GACvBR,EAAeQ,EAAMU,OAAOF,gBA2CxB,sBAAKzB,UAAU,uBAAf,UACI,wBAAQc,KAAK,SAAb,oBACA,wBAAQA,KAAK,SAAb,gCAMRD,IChDOkB,EAjBI,SAACjC,GAUhB,OACI,qBAAKE,UAAU,cAAf,SACI,cAAC,EAAD,CAAawB,qBAVe,SAACQ,GACjC,IAAMb,EAAW,2BACVa,GADU,IAEbC,GAAIC,KAAKC,SAASC,aAEtBtC,EAAMuC,aAAalB,SCcZmB,G,MArBQ,SAACxC,GAMtB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQyB,MAAO3B,EAAMyC,SAAUb,SARH,SAACT,GAC7BnB,EAAM0C,eAAevB,EAAMU,OAAOF,QAOlC,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCAKgB,G,YAfK,SAAC3C,GAEjB,IAAM4C,EAAQ5C,EAAMwB,KAAKqB,eAAe,QAAS,CAAED,MAAO,SACpDE,EAAM9C,EAAMwB,KAAKqB,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAO/C,EAAMwB,KAAKwB,cAExB,OACI,sBAAK9C,UAAU,eAAf,UACI,qBAAKA,UAAU,sBAAf,SAAsC0C,IACtC,qBAAK1C,UAAU,oBAAf,SAAoC4C,IACpC,qBAAK5C,UAAU,qBAAf,SAAqC6C,SCYlCE,EApBK,SAACjD,GAEjB,MAA0BK,mBAASL,EAAMsB,OAAzC,mBAAOA,EAAP,UAMA,OACI,cAAC,EAAD,CAAMpB,UAAU,eAAhB,SACI,sBAAKA,UAAU,4BAAf,UACI,cAAC,EAAD,CAAasB,KAAMxB,EAAMwB,OACzB,6BAAKF,IACL,sBAAKpB,UAAU,sBAAf,cAAuCF,EAAMuB,gBCI9C2B,G,MAlBM,SAAClD,GAElB,IAAImD,EAAkB,oBAAIjD,UAAU,0BAAd,gCAUtB,OARqC,GAAjCF,EAAMoD,iBAAiBC,SACvBF,EAAkBnD,EAAMoD,iBAAiBE,KAAI,SAACC,GAC1C,OACI,cAAC,EAAD,CAA2BjC,MAAOiC,EAAKjC,MAAOC,OAAQgC,EAAKhC,OAAQC,KAAM+B,EAAK/B,MAA5D+B,EAAKpB,QAM/B,oBAAIjC,UAAU,gBAAd,SAA+BiD,M,OCIxBK,G,MAlBE,SAACxD,GAEd,IAAIyD,EAAgB,KAMpB,OAJIzD,EAAM0D,SAAW,IACjBD,EAAgBrB,KAAKuB,MAAO3D,EAAM2B,MAAQ3B,EAAM0D,SAAY,KAAO,KAInE,sBAAKxD,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAAkB0D,MAAO,CAAEC,OAAQJ,OAEtD,qBAAKvD,UAAU,mBAAf,SAAmCF,EAAM8D,aCWtCC,G,MAvBD,SAAC/D,GAEX,IAAMgE,EAAkBhE,EAAMiE,WAAWX,KAAI,SAAAY,GAAS,OAAIA,EAAUvC,SAC9DwC,EAAe/B,KAAKJ,IAAL,MAAAI,KAAI,YAAQ4B,IAEjC,OACI,qBAAK9D,UAAU,QAAf,SAEQF,EAAMiE,WAAWX,KAAI,SAACY,GAClB,OACI,cAAC,EAAD,CAEIvC,MAAOuC,EAAUvC,MACjB+B,SAAUS,EACVL,MAAOI,EAAUJ,OAHZI,EAAUJ,cCa5BM,EAzBO,SAACpE,GAEnB,IAF6B,EAEvBqE,EAAkB,CACpB,CAAEP,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,GACvB,CAAEmC,MAAO,MAAOnC,MAAO,IAdE,cAiBP3B,EAAMsE,UAjBC,IAiB7B,2BAAsC,CAAC,IAA5BC,EAA2B,QAElCF,EADqBE,EAAQ/C,KAAKgD,YACJ7C,OAAS4C,EAAQhD,QAnBtB,8BAsB7B,OAAO,cAAC,EAAD,CAAO0C,WAAYI,KClBxBI,EAAiB,CACrB,CACEtC,GAAI,KACJb,MAAO,MACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEU,GAAI,KACJb,MAAO,SACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEU,GAAI,KACJb,MAAO,gBACPC,OAAQ,OACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,KAE1B,CACEU,GAAI,KACJb,MAAO,oBACPC,OAAQ,IACRC,KAAM,IAAIC,KAAK,KAAM,EAAG,MAqCbiD,EAjCH,WAEV,MAAgCrE,mBAASoE,GAAzC,mBAAOH,EAAP,KAAiBK,EAAjB,KAEA,EAAwCtE,oBAAS,IAAIoB,MAAOmD,kBAA5D,mBAAOC,EAAP,KAAqBC,EAArB,KAaM1B,EAAmBkB,EAASS,QAAO,SAAAR,GACvC,OAAQA,EAAQ/C,KAAKwB,cAAcV,aAAeuC,EAAavC,cAGjE,OACE,gCACE,cAAC,EAAD,CAAYC,aAjBU,SAACgC,GACzBI,GAAY,SAACK,GACX,MAAM,CAAET,GAAR,mBAAoBS,UAgBpB,eAAC,EAAD,CAAM9E,UAAU,WAAhB,UACE,cAAC,EAAD,CAAgBuC,SAAUoC,EAAcnC,eAZd,SAACuC,GAC/BH,EAAgBG,MAYZ,cAAC,EAAD,CAAeX,SAAUlB,IACzB,cAAC,EAAD,CAAcA,iBAAkBA,WCxDxC8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4eb9465a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return(\r\n        <div className={classes}>{props.children}</div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const [openForm, setOpenForm] = useState(false);\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n    }\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n    }\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n    }\r\n    const formSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n\r\n        props.onEnteredExpenseData(expenseData);\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n\r\n        toggleFormHandler();\r\n    }\r\n\r\n    const toggleFormHandler = () => {\r\n        setOpenForm(!openForm);\r\n    }\r\n\r\n    let formContent = <div className='new-expense__defaultactions'>\r\n        <button type='submit' onClick={toggleFormHandler}>Add New Expense</button>\r\n    </div>\r\n\r\n    if (openForm) {\r\n        formContent = <form onSubmit={formSubmitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' value={enteredDate} min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__actions'>\r\n                <button type='submit'>cancel</button>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    }\r\n\r\n    return (\r\n        formContent\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import React from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const onEnteredExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n        props.onAddExpense(expenseData);\r\n    }\r\n\r\n    return(\r\n        <div className='new-expense'>\r\n            <ExpenseForm onEnteredExpenseData={onEnteredExpenseDataHandler}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewExpense;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const filterYearChangeHandler = (event) => {\r\n        props.onFilterChange(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={filterYearChangeHandler}>\r\n          <option value='2022' >2022</option>\r\n          <option value='2021' >2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import React, {useState} from 'react';\r\nimport './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    const [title, setTitle] = useState(props.title);\r\n    // const changeTitleHandler = () => {\r\n    //     console.log(\"Clicked\");\r\n    //     setTitle('Change title');\r\n    // }\r\n\r\n    return (\r\n        <Card className='expense-item'>\r\n            <div className='expense-item__description'>\r\n                <ExpenseDate date={props.date}/>\r\n                <h2>{title}</h2>\r\n                <div className='expense-item__price'>${props.amount}</div>\r\n            </div>\r\n            {/* <button onClick={changeTitleHandler}>Change title</button> */}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n    let expensesContent = <h2 className='expenses-list__fallback'>No expenses found.</h2>;\r\n\r\n    if (props.filteredExpenses.length != 0) {\r\n        expensesContent = props.filteredExpenses.map((item) => {\r\n            return (\r\n                <ExpenseItem key={item.id} title={item.title} amount={item.amount} date={item.date} />\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ul className='expenses-list'>{expensesContent}</ul>\r\n    );\r\n\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{ height: barFillHeight }}></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{props.label}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximun = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {\r\n                props.dataPoints.map((dataPoint) => {\r\n                    return (\r\n                        <ChartBar\r\n                            key={dataPoint.label}\r\n                            value={dataPoint.value}\r\n                            maxValue={totalMaximun}\r\n                            label={dataPoint.label}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n    const chartDataPoints = [\r\n        { label: 'jan', value: 0 },\r\n        { label: 'feb', value: 0 },\r\n        { label: 'mar', value: 0 },\r\n        { label: 'apr', value: 0 },\r\n        { label: 'may', value: 0 },\r\n        { label: 'jun', value: 0 },\r\n        { label: 'jul', value: 0 },\r\n        { label: 'aug', value: 0 },\r\n        { label: 'sep', value: 0 },\r\n        { label: 'oct', value: 0 },\r\n        { label: 'nov', value: 0 },\r\n        { label: 'dec', value: 0 },\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\nimport Card from './UI/Card';\nimport NewExpense from './NewExpense/NewExpense';\nimport ExpensesFilter from './ExpenseFilter/ExpenseFilter';\nimport ExpensesList from './Expenses/ExpensesList';\nimport ExpensesChart from './Expenses/ExpensesChart';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'SIP',\n    amount: 4000,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: 'e2',\n    title: 'New TV',\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const [filteredYear, setFilteredYear] = useState(new Date().getUTCFullYear());\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n\n  }\n\n  const filterYearChangeHandler = (filterdYear) => {\n    setFilteredYear(filterdYear);\n  }\n\n  const filteredExpenses = expenses.filter(expense => {\n    return (expense.date.getFullYear().toString() === filteredYear.toString());\n  });\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Card className='expenses'>\n        <ExpensesFilter selected={filteredYear} onFilterChange={filterYearChangeHandler} />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList filteredExpenses={filteredExpenses} />\n      </Card>\n    </div>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}